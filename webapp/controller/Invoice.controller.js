sap.ui.define(["sap/ui/core/mvc/Controller",
	"sap/m/PDFViewer",
	"sap/m/MessageBox"], function (Controller, MessageBox, PDFViewer) {
	"use strict";
	return Controller.extend("cognitivepp.CognitiveApp.controller.Invoice", {
		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf cognitivepp.CognitiveApp.view.Invoice
		 */
		onInit: function () {
			this.oModel = sap.ui.getCore().getModel(this.userModel);
			var idvendor = this.byId("idvendorsearch");
			idvendor.setModel(this.oModel);
			
			this._pdfViewer = new sap.m.PDFViewer("apdfViewer",
			{
				sourceValidationFailed: function (oEvent) {	
					oEvent.preventDefault();
				}
			});
			this.getView().addDependent(this._pdfViewer);
			this._oModel = new sap.ui.model.json.JSONModel();
			
		},
		/**
		 *@memberOf cognitivepp.CognitiveApp.controller.Invoice
		 */
		onSearch: function (oEvent) {
			//This code was generated by the layout editor.

			var lvvendor = this.byId("idvendorsearch");
			var lvcreatedate = this.byId("idcreatedt");
			var today = new Date();
			lvcreatedate = today;
			var lvstatus = this.byId("idstatus");
			
			var lv_where;

			if (lvstatus.getSelectedItem().getText() === "All")
			{
			lv_where = "filter[where][and][0][vendorid]=" + lvvendor.getValue();
			}
			else
			{
				lv_where = "filter[where][and][0][vendorid]=" + lvvendor.getValue()
				+ "&filter[where][and][1][invoicestatus]=" + lvstatus.getSelectedItem().getText();	
			}
			var sUrl_list = "http://localhost:3000/invoicefiles?" + lv_where;
			jQuery.ajax({
				type: "GET",
				//			dataType: "xml",
				dataType: "json",
				data: {},
				url: sUrl_list,
				context: this,
				crossDomain: true,
				error: function (jqXHR, textStatus, errorThrown) {
					var sMessage = jqXHR.status + " " + jqXHR.statusText + " " + jqXHR.responseText;
					jQuery.sap.log.error("Data loading error", sMessage, "index.html");
					sap.m.MessageBox.show(JSON.parse(jqXHR.responseText).error.message);
				},
				success: function (oData, status, jqXHR) {
					if (oData === null || oData === undefined) {
						var sMessage = "WARNING. Received a null or undefined response object.";
						jQuery.sap.log.warning("Data loading messageiungasd", sMessage, "index.html");
						sap.m.MessageToast.show(sMessage);
						return;
					} else

					//			    var oXMLModel = new sap.ui.model.xml.XMLModel(oData);
						var searchres = new sap.ui.model.json.JSONModel(oData);
					//		    var oTable = this.byId("mTable");
					var oTable = this.byId("searchtable");
					oTable.setModel(searchres);
				}
			});

		},
	onTableRowClick: function(oEvent){
			var oItem = oEvent.getParameter("listItem") || oEvent.getSource();
			var oCtx = oItem.getBindingContext(); 
			// var sPath = oCtx ? oCtx.getPath() : undefined;
			
			this._sValidPath = oCtx.getProperty("fileurl");
			var path = "https://scandocument.blob.core.windows.net/trainpdf/" +
						this._sValidPath;
			this._oModel.setData({
    			Source: path,
				Title: this._sValidPath,
				Height: "600px",
				Width: "600px"
			});
			this.getView().setModel(this._oModel);
			this._pdfViewer.setSource(path);
			this._pdfViewer.open();
		},
	onItemPress: function(oEvent){
//		sap.m.MessageBox.show("Row clicked");
		var oItem = oEvent.getParameter("listItem") || oEvent.getSource();
		var oCtx = oItem.getBindingContext(); 
		var fileurl = oCtx.getProperty("fileurl");
		var status = oCtx.getProperty("invoicestatus");
		
		if (status === "Extracted")
		{
			var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			oRouter.navTo("Extractdetail", {
						"filename": fileurl
					});
		}
		
		
		
		
	}		

	});
});